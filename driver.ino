#include <Adafruit_NeoPixel.h>

Adafruit_NeoPixel leds = Adafruit_NeoPixel(2, 15, NEO_GRB + NEO_KHZ800);

int count = 0;
double times[] = {10.825, 10.85, 10.9, 10.925, 12.525, 12.75, 13.425, 13.45, 14.925, 14.95, 15.05, 15.25, 15.275, 16.55, 17.575, 17.775, 17.8, 18.4, 18.425, 18.475, 19.975, 20, 20.3, 20.325, 20.6, 20.625, 20.65, 20.675, 20.925, 20.95, 21, 22.55, 22.85, 23.45, 23.475, 24.125, 25.05, 25.35, 25.375, 25.975, 26, 26.65, 27.575, 27.875, 27.9, 28.5, 28.525, 28.55, 28.575, 28.6, 28.625, 28.65, 29.175, 30.1, 31.075, 32.6, 32.625, 32.65, 32.925, 33.6, 35.15, 35.275, 35.3, 36.15, 36.2, 36.225, 36.25, 37.65, 37.675, 37.975, 38, 38.6, 38.625, 38.65, 38.675, 40.175, 40.2, 40.225, 40.35, 40.85, 40.875, 40.9, 41.125, 41.15, 41.225, 42.725, 42.775, 43.1, 43.65, 43.675, 45.225, 45.25, 45.325, 45.35, 45.375, 46.175, 46.2, 46.225, 46.275, 46.85, 48.7, 48.725, 48.75, 50.275, 50.3, 50.325, 50.35, 50.4, 50.425, 50.45, 50.6, 50.625, 51.25, 51.275, 51.3, 51.325, 51.375, 51.425, 51.5, 51.55, 51.625, 51.65, 51.725, 51.75, 51.8, 51.85, 51.875, 51.9, 52, 52.125, 52.15, 52.175, 52.225, 52.25, 52.3, 52.4, 52.5, 52.55, 52.575, 52.65, 52.675, 52.7, 52.775, 52.825, 52.9, 52.925, 53.175, 54.05, 54.25, 54.55, 55, 55.05, 55.075, 55.15, 55.175, 55.35, 55.4, 55.425, 55.475, 55.5, 55.75, 55.825, 56.05, 56.175, 56.275, 56.35, 56.45, 56.5, 56.55, 56.575, 56.6, 56.625, 56.675, 56.7, 56.725, 56.75, 56.825, 56.95, 57.025, 57.125, 57.225, 57.3, 57.325, 57.4, 57.475, 57.525, 57.575, 57.6, 57.675, 57.775, 57.8, 57.875, 57.95, 58.8, 58.825, 59.025, 59.1, 59.15, 59.375, 59.4, 60.15, 60.2, 60.35, 60.375, 60.4, 60.425, 60.5, 60.675, 60.925, 61.375, 61.4, 61.475, 61.55, 61.575, 61.625, 61.65, 61.7, 61.75, 61.775, 61.85, 61.875, 61.925, 62.025, 62.075, 62.125, 62.2, 62.225, 62.275, 62.3, 62.325, 62.4, 62.425, 62.5, 62.525, 62.625, 62.675, 62.725, 62.775, 62.825, 62.875, 62.9, 62.95, 62.975, 63.125, 63.2, 63.825, 63.85, 63.875, 64.175, 64.35, 64.375, 64.4, 64.75, 64.775, 65.5, 65.525, 65.75, 65.9, 65.925, 66.05, 66.075, 66.15, 66.175, 66.4, 66.425, 66.45, 66.475, 66.6, 66.65, 66.7, 66.8, 67, 67.025, 67.075, 67.2, 67.325, 67.475, 67.6, 67.675, 67.8, 67.975, 68, 68.05, 68.25, 68.3, 71.45, 71.5, 71.55, 71.575, 71.65, 73, 73.05, 73.1, 73.125, 73.325, 73.95, 75.525, 75.55, 75.625, 75.675, 75.7, 75.85, 76.5, 76.525, 76.55, 76.575, 76.6, 76.65, 76.675, 78.1, 78.125, 78.175, 78.2, 78.45, 78.475, 78.575, 79, 79.025, 79.1, 79.15, 79.2, 79.675, 80.65, 80.675, 80.7, 80.725, 81, 81.025, 81.25, 81.3, 81.325, 81.525, 81.55, 81.6, 81.625, 81.775, 83.1, 83.125, 83.175, 83.2, 83.25, 83.275, 83.325, 84.05, 84.075, 84.1, 84.725, 85.625, 85.675, 85.7, 85.725, 85.75, 85.775, 85.8, 86.575, 86.6, 86.625, 86.65, 86.675, 86.725, 88.225, 88.275, 88.3, 88.375, 88.4, 88.425, 88.45, 88.55, 88.6, 88.625, 89.1, 89.175, 90.725, 90.75, 90.775, 90.825, 90.85, 91.025, 91.325, 91.375, 91.4, 91.45, 91.625, 91.65, 91.675, 91.75, 92.3, 93.2, 93.225, 93.325, 94.275, 94.825, 95.725, 95.75, 96.075, 96.825, 97.35, 98.25, 98.275, 98.575, 99.325, 99.875, 100.775, 100.8, 100.9, 101.5, 101.525, 101.725, 101.75, 101.85, 102.4, 103.3, 103.325, 103.475, 103.5, 103.525, 103.625, 103.65, 104.25, 104.275, 104.925, 105.425, 105.75, 105.775, 105.825, 105.85, 105.9, 105.925, 106.15, 106.175, 106.775, 106.825, 106.85, 106.875, 106.9, 106.975, 107.45, 108.35, 108.375, 108.45, 108.475, 109.3, 109.325, 109.975, 110.9, 111.85, 111.875, 111.925, 112.5, 113.425, 113.475, 113.775, 113.8, 114.45, 115.025, 115.95, 116.025, 116.05, 116.075, 116.125, 116.925, 116.95, 116.975, 118.525, 118.575, 118.825, 119.4, 119.425, 119.45, 120.075, 121.05, 121.075, 121.1, 121.625, 121.675, 121.7, 121.725, 121.95, 122, 123.575, 123.6, 123.85, 123.875, 123.9, 124.45, 124.5, 124.525, 124.55, 126.025, 126.05, 126.075, 126.1, 127.05, 128.625, 128.875, 128.9, 128.925, 129.5, 129.55, 129.575, 130.175, 131.075, 131.1, 131.175, 131.2, 131.7, 131.725, 131.775, 131.8, 131.825, 132.075, 132.125, 132.15, 132.225, 132.35, 132.4, 132.45, 132.525, 132.575, 132.6, 132.625, 132.65, 132.675, 132.7, 132.725, 132.775, 132.825, 132.875, 132.975, 133.075, 133.175, 133.25, 133.35, 133.425, 133.45, 133.475, 133.55, 133.6, 133.625, 133.75, 133.8, 134, 134.05, 134.225, 134.325, 134.375, 134.4, 134.5, 134.65, 134.675, 134.7, 134.775, 134.925, 135.175, 135.2, 135.4, 135.425, 135.45, 135.575, 135.675, 135.7, 135.8, 135.85, 136.5, 137.15, 137.275, 137.35, 137.375, 137.4, 137.475, 137.525, 137.55, 137.6, 137.65, 137.675, 137.725, 137.825, 137.875, 137.925, 137.975, 138.025, 138.1, 138.175, 138.2, 138.25, 138.275, 138.35, 138.4, 138.475, 138.575, 138.625, 138.675, 138.8, 138.825, 139.05, 139.075, 139.1, 139.125, 139.275, 139.3, 139.65, 139.725, 139.775, 139.9, 140.075, 140.125, 140.275, 140.775, 140.8, 140.825, 140.85, 140.95, 141.025, 141.05, 141.2, 141.4, 141.425, 141.45, 141.475, 141.525, 141.85, 142.175, 142.2, 142.225, 142.25, 142.35, 142.4, 142.45, 142.525, 142.575, 142.6, 142.65, 142.725, 142.75, 142.775, 142.8, 142.825, 142.9, 142.95, 143, 143.1, 143.175, 143.2, 143.275, 143.325, 143.4, 143.5, 143.575, 143.65, 143.7, 143.725, 143.775, 143.8, 143.825, 143.925, 143.95, 143.975, 144, 144.075, 144.325, 144.425, 144.475, 144.5, 144.7, 144.825, 144.925, 145, 145.075, 145.1, 146.275, 146.3, 146.35, 146.425, 146.475, 146.5, 146.6, 146.625, 146.675, 146.7, 146.725, 146.95, 146.975, 147, 147.025, 147.125, 147.225, 147.25, 147.525, 147.55, 147.575, 147.6, 147.75, 147.8, 147.9, 147.95, 147.975, 148, 148.1, 148.175, 148.25, 148.375, 148.5, 148.775, 148.8, 149.5, 149.9, 150.1, 150.125, 150.15, 150.725, 150.75, 151.325, 152.25, 152.3, 152.325, 153.8, 153.825, 153.975, 154.775, 154.85, 154.9, 155, 155.425, 156.325, 156.375, 156.4, 156.425, 156.475, 156.5, 156.525, 156.55, 156.675, 157.15, 157.275, 157.3, 157.325, 157.35, 157.375, 157.425, 157.45, 157.475, 157.5, 157.525, 157.55, 158.9, 158.975, 159, 159.8, 159.85, 159.875, 159.975, 160.475, 161.45, 161.475, 161.55, 162.05, 162.075, 162.1, 162.125, 162.35, 162.375, 163.95, 164, 164.025, 164.1, 164.25, 164.275, 164.85, 164.9, 164.925, 164.95, 164.975, 165.05, 165.525, 166.425, 166.475, 166.5, 166.55, 166.8, 167.175, 167.375, 167.4, 167.425, 167.45, 167.475, 167.5, 167.525, 167.55, 167.575, 167.65, 167.675, 169, 169.025, 169.05, 169.15, 169.325, 169.35, 169.425, 169.9, 169.925, 169.95, 169.975, 170.025, 170.075, 170.55, 170.575, 171.525, 171.55, 171.7, 172.125, 172.15, 172.175, 172.2, 172.225, 174.975, 177.6, 179.575, 180.15, 182.6, 192.65, 192.675, 192.7, 192.725, 192.8, 192.825, 192.85, 192.95, 192.975, 193, 193.025, 193.15, 193.175, 193.225, 193.25, 193.275, 193.3, 193.325, 193.35, 193.4, 193.45, 193.475, 193.525, 193.55, 193.6, 193.625, 193.65, 193.75, 193.775, 193.8, 193.85, 193.9, 193.925, 193.975, 194.1, 194.125, 194.2, 194.25, 194.275, 194.3, 194.4, 194.425, 194.5, 194.525, 194.55, 194.575, 194.6, 194.625, 194.65, 194.675, 194.7, 194.8, 194.825, 194.85, 194.875, 194.925, 194.95, 194.975, 195, 195.025, 195.1, 195.15, 195.35, 195.375, 195.45, 195.475, 195.5, 195.525, 195.55, 195.675, 195.75, 195.775, 195.8, 195.825, 195.875, 195.975, 196.05, 196.075, 196.125, 196.15, 196.175, 196.2, 196.225, 196.3, 196.35, 196.375, 196.425, 196.45, 196.475, 196.5, 196.575, 196.625, 196.65, 196.675, 196.725, 196.75, 196.775, 196.825, 196.85, 196.95, 197, 197.05, 197.075, 197.1, 197.125, 197.15, 197.175, 197.225, 197.275, 197.3, 197.325, 197.35, 197.375, 197.4, 197.45, 197.525, 197.55, 197.6, 197.625, 197.675, 197.725, 197.75, 197.825, 197.9, 197.925, 197.95, 197.975, 198, 198.025, 198.05, 198.075, 198.1, 198.125, 198.15, 198.2, 198.3, 198.325, 198.35, 198.375, 198.4, 198.425, 198.45, 198.5, 198.525, 198.575, 198.625, 198.65, 198.675, 198.75, 198.8, 198.825, 198.85, 198.9, 198.95, 199, 199.025, 199.1, 199.125, 199.15, 199.175, 199.25, 199.275, 199.3, 199.35, 199.4, 199.425, 199.45, 199.55, 199.575, 199.6, 199.625, 199.65, 199.775, 199.875, 199.9, 199.925, 199.95, 199.975, 200.05, 200.075, 200.15, 200.2, 200.225, 200.25, 200.375, 200.425, 200.45, 200.525, 200.55, 200.575, 200.6, 200.675, 200.725, 200.75, 200.825, 200.85, 200.875, 201.025, 201.1, 201.125, 201.15, 201.175, 201.2, 201.225, 201.25, 201.325, 201.35, 201.375, 201.4, 201.425, 201.45, 201.475, 201.5, 201.65, 201.675, 201.7, 201.825, 201.85, 201.875, 201.9, 201.925, 201.95, 201.975, 202.025, 202.1, 202.125, 202.15, 202.175, 202.2, 202.3, 202.4, 202.425, 202.45, 202.5, 202.525, 202.55, 202.575, 202.625, 202.7, 202.725, 202.775, 202.825, 202.85, 202.95, 203, 203.075, 203.1, 203.125, 203.25, 203.325, 203.35, 203.375, 203.4, 203.425, 203.45, 203.55, 203.6, 203.65, 203.675, 203.7, 203.725, 203.75, 203.825, 203.85, 203.9, 204.025, 204.05, 204.075, 204.1, 204.3, 204.35, 204.6, 204.675, 204.7, 204.725, 204.8, 204.9, 205, 205.05, 205.075, 205.2, 205.225, 205.325, 205.35, 205.4, 205.475, 205.6, 205.7, 205.925, 205.95, 205.975, 206.225, 206.25, 206.275, 206.525, 206.875, 207.15, 207.175, 207.2, 207.25, 207.5, 207.525, 207.55, 207.575, 207.6, 207.675, 207.7, 207.775, 207.8, 207.85, 207.875, 207.95, 208.075, 208.1, 208.175, 208.2, 208.225, 208.25, 208.325, 208.35, 208.475, 208.75, 208.8, 208.825, 208.85, 208.875, 209.75, 209.775, 209.8, 210.025, 210.05, 210.35, 210.475, 210.525, 210.65, 210.975, 211, 211.025, 211.075, 211.3, 211.325, 211.35, 211.625, 211.65, 211.675, 211.7, 211.9, 211.925, 212.025, 212.05, 212.25, 212.85, 212.925, 213, 213.125, 213.2, 213.225, 213.275, 213.3, 213.4, 213.45, 213.475, 213.525, 213.55, 213.575, 213.6, 213.675, 213.7, 213.775, 213.825, 213.85, 213.875, 213.95, 213.975, 214, 214.05, 214.1, 214.125, 214.175, 214.2, 214.225, 214.325, 214.375, 214.425, 214.45, 214.5, 214.525, 214.55, 214.575, 214.6, 214.725, 214.85, 214.9, 214.925, 214.95, 215.025, 215.05, 215.35, 215.375, 215.45, 215.5, 215.55, 215.575, 215.6, 215.675, 215.7, 216.175, 216.325, 216.45, 216.475, 216.7, 216.725, 216.75, 216.8, 216.85, 216.875, 216.925, 216.975, 217.025, 217.05, 217.075, 217.1, 217.125, 217.15, 217.175, 217.25, 217.275, 217.3, 217.325, 217.35, 217.375, 217.55, 217.575, 217.6, 217.7, 217.725, 217.8, 217.825, 217.85, 217.875, 217.9, 217.975, 218, 218.05, 218.075, 218.175, 218.2, 218.225, 218.275, 218.3, 218.325, 218.4, 218.425, 218.6, 218.65, 218.675, 218.725, 218.75, 218.775, 218.825, 218.85, 218.875, 218.95, 218.975, 219.05, 219.075, 219.15, 219.175, 219.25, 219.3, 219.325, 219.375, 219.4, 219.45, 219.475, 219.5, 219.525, 219.55, 219.575, 219.6, 219.65, 219.725, 219.75, 219.825, 219.85, 219.875, 219.9, 219.95, 219.975, 220, 220.025, 220.1, 220.125, 220.15, 220.325, 220.35, 220.4, 220.425, 220.5, 220.525, 220.65, 220.75, 220.775, 220.85, 220.875, 220.95, 221.075, 221.1, 221.4, 221.45, 221.5, 221.525, 221.6, 221.625, 221.75, 221.85, 221.925, 221.975, 222, 222.025, 222.075, 222.125, 222.175, 222.2, 222.425, 222.45, 222.55, 222.625, 222.65, 222.675, 222.7, 222.75, 222.8, 222.85, 222.925, 222.95, 223, 223.05, 223.1, 223.175, 223.225, 223.3, 223.325, 223.375, 223.4, 223.425, 223.5, 223.525, 223.625, 223.7, 223.775, 223.825, 223.9, 224, 224.025, 224.05, 224.075, 224.2, 224.225, 224.275, 224.35, 224.375, 224.45, 224.475, 224.5, 224.525, 224.55, 224.575, 224.625, 224.65, 224.675, 224.775, 224.8, 224.85, 224.95, 225.225, 225.45, 225.5, 225.525, 225.55, 225.625, 225.85, 226.175, 226.2, 226.225, 226.425, 226.5, 226.575, 226.6, 226.775, 226.8, 226.825, 226.85, 227.025, 227.05, 227.075, 227.1, 227.125, 227.15, 227.175, 227.225, 227.25, 227.375, 227.575, 227.625, 227.7, 227.775, 227.85, 227.875, 227.95, 227.975, 228, 228.025, 228.075, 228.1, 228.125, 228.15, 228.175, 228.2, 228.25, 228.3, 228.35, 228.45, 228.475, 228.525, 228.55, 228.625, 228.725, 228.75, 228.775, 228.825, 228.9, 228.925, 229, 229.1, 229.175, 229.225, 229.25, 229.3, 229.35, 229.375, 229.4, 229.45, 229.475, 229.55, 229.575, 229.675, 229.7, 229.825, 229.875, 229.9, 229.925, 230, 230.025, 230.05, 230.1, 230.125, 230.175, 230.2, 230.225, 230.25, 230.275, 230.3, 230.45, 230.475, 230.5, 230.525, 230.6, 230.65, 230.675, 230.7, 230.725, 230.75, 230.875, 230.9, 230.925, 230.95, 231, 231.075, 231.2, 231.275, 231.425, 231.45, 231.9, 231.925, 232.075, 232.1, 232.125, 232.15, 232.2, 232.225, 232.3, 232.35, 232.4, 232.45, 232.475, 232.5, 232.55, 232.6, 232.625, 232.7, 232.725, 232.75, 232.775, 232.8, 232.875, 232.925, 233.05, 233.075, 233.1, 234.45, 234.525, 234.55, 234.6, 234.675, 234.7, 234.9, 234.925, 234.95, 237.2321};


void setup() {
  Serial.begin(9600);
  Serial.println("Hello World");

  count = 0;
  
  leds.begin(); 
  leds.show();

}

void loop() {
  // put your main code here, to run repeatedly:
 
  uint8_t r = 0;
  uint8_t g = 0;
  uint8_t b = 0;

  leds.setBrightness(15);

ry:  
  //RED to YELLOW
  r = 255;
  g = 0;
  b = 0;

  for(int i =0; i <=255;i+=5){
    leds.setPixelColor(0, r, i, b);
    leds.setPixelColor(1, r, i, b);
    delay(50);
    leds.show();

      Serial.println(millis() / 1000.0);
      Serial.println(times[count]);
      Serial.println((millis() / 1000.0) >= times[count]);
      Serial.println(sizeof(times)/sizeof(double));
  
    if (millis() / 1000.0 >= times[sizeof(times)/sizeof(double) - 1]) {
      leds.setBrightness(0);
    }
    
    if (millis() / 1000.0 >= times[count]) {
      ++count;
      goto gt;
      
    }
  }

 yg:
  //YELLOW to GREEN
  r = 255; g = 255;b =0;

  for(int i =255; i >=0;i-=5) {

    leds.setPixelColor(0, i, g, b);
    leds.setPixelColor(1, i, g, b);
    delay(50);
    leds.show();

    if (millis() / 1000.0 >= times[sizeof(times)/sizeof(double) - 1]) {
      leds.setBrightness(0);
    }
    if (millis() / 1000.0 >= times[count]) {
      ++count;
      goto tb;
    }
  }

gt:
  //GREEN to TEAL
  r =0;g =255;b =0;
  for(int i = 0; i <= 255;i+=5) {
    leds.setPixelColor(0, r, g, i);
    leds.setPixelColor(1, r, g, i);
    delay(50);
    leds.show();

    if (millis() / 1000.0 >= times[sizeof(times)/sizeof(double) - 1]) {
      leds.setBrightness(0);
    }
    if (millis() / 1000.0 >= times[count]) {
      ++count;
      goto bm;
    }
  }

tb:
  //TEAL to BLUE
  r =0;g =255;b =255;
  for(int i =255; i >=0;i-=5) {
    leds.setPixelColor(0, r, i, b);
    leds.setPixelColor(1, r, i, b);
    delay(50);
    leds.show();

    if (millis() / 1000.0 >= times[sizeof(times)/sizeof(double) - 1]) {
      leds.setBrightness(0);
    }
    if (millis() / 1000.0 >= times[count]) {
      ++count;
      goto mr;
    }
  }

bm:
  //BLUE to MAGENTA
  r =0;g =0;b =255;
  for(int i =0; i <=255;i+=5) {
    leds.setPixelColor(0, i, g, b);
    leds.setPixelColor(1, i, g, b);
    delay(50);
    leds.show();

    if (millis() / 1000.0 >= times[sizeof(times)/sizeof(double) - 1]) {
      leds.setBrightness(0);
    }
    if (millis() / 1000.0 >= times[count]) {
      ++count;
      goto ry;
    }
  }

mr:
  //MAGENTA to RED
  r =255;g =0;b =255;
  for(int i =255; i >=0;i-=5) {
    leds.setPixelColor(0, r, g, i);
    leds.setPixelColor(1, r, g, i);
    delay(50);
    leds.show();

    if (millis() / 1000.0 >= times[sizeof(times)/sizeof(double) - 1]) {
      leds.setBrightness(0);
    }
    if (millis() / 1000.0 >= times[count]) {
      ++count;
      goto yg;
    }
  }

 
  delay(100);

  leds.show();


}
