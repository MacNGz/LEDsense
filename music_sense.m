% Gary Zheng, Michael Zhong
% music_sense - converts music file into arduino ino
%               which flashes on changes of frequency over threshhold

%% Example usage
% audioread loads a soundfile into a vector, from which we take the
% frequency
% Takes in a music file name outfile name and creates the ino file
function [] = music_sense(musicName,inoFileOut)

% Read an audio waveform
[d,sr] = audioread(musicName);
%get frequencies
freqs = d(:,1);
ds=size(d);
%get samples
samples=ds(1);
REQ_SAMPLE_RATE = 40;
sample_factor = round(sr/REQ_SAMPLE_RATE);
%reduce sampling rate to required
shorter=decimate(freqs,sample_factor);
short_size = size(shorter);
short_len = short_size(1);
%create time axes with time and new sample rate (SAMPLE_RATE/s)
time = linspace(1,samples/sr,short_len);
%changes in freq vector
changes = abs(diff(shorter));
%calculates beats
x = size(changes);
x = x(1);
average = mean(changes);
threshold_change=2*average;
beats=changes>threshold_change;

%plots where beats are
figure
plot(time(2:end),beats);

times = find(beats)/REQ_SAMPLE_RATE;
times
%creates time vector
time_size=size(times);
timevec=[num2str(times(1))];
timevec
time_size(1)
for n=2:time_size(1)
    disp('hi')
   timevec=[timevec,', ',num2str(times(n))]
end
%appends final time
timevec=['double times[] = {',timevec,', ',num2str(samples/sr),'}'];
timevec
%writes to ino file
fileID = fopen(inoFileOut,'w');
ardy_text=['#include <Adafruit_NeoPixel.h>\n',...
'Adafruit_NeoPixel leds = Adafruit_NeoPixel(2, 15, NEO_GRB + NEO_KHZ800);\n',...
'int count = 0;\n',...
timevec,...
';\nvoid setup() {\n',...
'  Serial.begin(9600);\n',...
'  Serial.println("Hello World");\n',...
'  count = 0;\n',...
'  \n',...
'  leds.begin(); \n',...
'  leds.show();\n',...
'}\n',...
'void loop() {\n',...
'  // put your main code here, to run repeatedly:\n',...
' \n',...
'  uint8_t r = 0;\n',...
'  uint8_t g = 0;\n',...
'  uint8_t b = 0;\n',...
'  leds.setBrightness(15);\n',...
'ry:  \n',...
'  //RED to YELLOW\n',...
'  r = 255;\n',...
'  g = 0;\n',...
'  b = 0;\n',...
'  for(int i =0; i <=255;i+=5){\n',...
'    leds.setPixelColor(0, r, i, b);\n',...
'    leds.setPixelColor(1, r, i, b);\n',...
'    delay(50);\n',...
'    leds.show();\n',...
'      Serial.println(millis() / 1000.0);\n',...
'      Serial.println(times[count]);\n',...
'      Serial.println((millis() / 1000.0) >= times[count]);\n',...
'      Serial.println(sizeof(times)/sizeof(double));\n',...
'  \n',...
'    if (millis() / 1000.0 >= times[sizeof(times)/sizeof(double) - 1]) {\n',...
'      leds.setBrightness(0);\n',...
'    }\n',...
'    \n',...
'    if (millis() / 1000.0 >= times[count]) {\n',...
'      ++count;\n',...
'      goto gt;\n',...
'      \n',...
'    }\n',...
'  }\n',...
' yg:\n',...
'  //YELLOW to GREEN\n',...
'  r = 255; g = 255;b =0;\n',...
'  for(int i =255; i >=0;i-=5) {\n',...
'    leds.setPixelColor(0, i, g, b);\n',...
'    leds.setPixelColor(1, i, g, b);\n',...
'    delay(50);\n',...
'    leds.show();\n',...
'    if (millis() / 1000.0 >= times[sizeof(times)/sizeof(double) - 1]) {\n',...
'      leds.setBrightness(0);\n',...
'    }\n',...
'    if (millis() / 1000.0 >= times[count]) {\n',...
'      ++count;\n',...
'      goto tb;\n',...
'    }\n',...
'  }\n',...
'gt:\n',...
'  //GREEN to TEAL\n',...
'  r =0;g =255;b =0;\n',...
'  for(int i = 0; i <= 255;i+=5) {\n',...
'    leds.setPixelColor(0, r, g, i);\n',...
'    leds.setPixelColor(1, r, g, i);\n',...
'    delay(50);\n',...
'    leds.show();\n',...
'    if (millis() / 1000.0 >= times[sizeof(times)/sizeof(double) - 1]) {\n',...
'      leds.setBrightness(0);\n',...
'    }\n',...
'    if (millis() / 1000.0 >= times[count]) {\n',...
'      ++count;\n',...
'      goto bm;\n',...
'    }\n',...
'  }\n',...
'tb:\n',...
'  //TEAL to BLUE\n',...
'  r =0;g =255;b =255;\n',...
'  for(int i =255; i >=0;i-=5) {\n',...
'    leds.setPixelColor(0, r, i, b);\n',...
'    leds.setPixelColor(1, r, i, b);\n',...
'    delay(50);\n',...
'    leds.show();\n',...
'    if (millis() / 1000.0 >= times[sizeof(times)/sizeof(double) - 1]) {\n',...
'      leds.setBrightness(0);\n',...
'    }\n',...
'    if (millis() / 1000.0 >= times[count]) {\n',...
'      ++count;\n',...
'      goto mr;\n',...
'    }\n',...
'  }\n',...
'bm:\n',...
'  //BLUE to MAGENTA\n',...
'  r =0;g =0;b =255;\n',...
'  for(int i =0; i <=255;i+=5) {\n',...
'    leds.setPixelColor(0, i, g, b);\n',...
'    leds.setPixelColor(1, i, g, b);\n',...
'    delay(50);\n',...
'    leds.show();\n',...
'    if (millis() / 1000.0 >= times[sizeof(times)/sizeof(double) - 1]) {\n',...
'      leds.setBrightness(0);\n',...
'    }\n',...
'    if (millis() / 1000.0 >= times[count]) {\n',...
'      ++count;\n',...
'      goto ry;\n',...
'    }\n',...
'  }\n',...
'mr:\n',...
'  //MAGENTA to RED\n',...
'  r =255;g =0;b =255;\n',...
'  for(int i =255; i >=0;i-=5) {\n',...
'    leds.setPixelColor(0, r, g, i);\n',...
'    leds.setPixelColor(1, r, g, i);\n',...
'    delay(50);\n',...
'    leds.show();\n',...
'    if (millis() / 1000.0 >= times[sizeof(times)/sizeof(double) - 1]) {\n',...
'      leds.setBrightness(0);\n',...
'    }\n',...
'    if (millis() / 1000.0 >= times[count]) {\n',...
'      ++count;\n',...
'      goto yg;\n',...
'    }\n',...
'  }\n',...
' \n',...
'  delay(100);\n',...
'  leds.show();\n',...
'}\n'];
fprintf(fileID,ardy_text(:));
fclose(fileID);


%% Release history

% 2017-03-25 revision 1.0 - MHacks 9 version

end